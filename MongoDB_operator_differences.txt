[{
  "_id": "1"
  "data": [20,40,60]
},
{
  "_id": "2",
  "data": [40,60,10]
}]

*****Difference between the $in and $all operator******
$in : Return the results where the document contains at least one exact match from the specified elements
$all : Return documents that contain exact matches for all the specified elements.

//-----------$in------------//
find({ data: {$in: [20,40,60] }})
Output:
[{
  "_id": "1"
  "data": [20,40,60]
}
{
  "_id": "2",
  "data": [40,60,10]
}]

//-----------$all------------//
find({ data: {$all: [20,40,60] }})
Output:
{
  "_id": "1"
  "data": [20,40,60]
}
-----------------------------------------------------------------------------------------------------------------------------------------------------------

*****Difference between the without $all and with $all operator******
[{
  "id":1
  "data": ["red", "blue"]
},
{
  "id":1
  "data": ["blue", "red"]
}]

without $all : Return documents which docs contains exact match element with position
$all : Return documents that contain exact matches for all the specified elements.

//----------without $all------------//
find({data:['red','blue']}) 
Output:
{
  "id":1
  "data": ["red", "blue"]
}

//-----------with $all------------//
find({data:{$all:['red','blue']}})
Output:
[{
  "id":1
  "data": ["red", "blue"]
},
{
  "id":1
  "data": ["blue", "red"]
}]

-----------------------------------------------------------------------------------------------------------------------------------------------------------

*****Difference between the $ne and $not operator******

[{
  "id":1,
  "data": 12,
  "status":1
},
{
  "id":2,
  "data": 20,
  "status":2
},
{
    "id":3,
    "data": 22,
    "status":1
}]

$ne : Return the results where the document contains not equal to our specified criteria.we cannot use operator expression like $gt,$lt
$not : To return documents excluding those that match our criteria, use the $not operator with operators such as $gt and $lt. Keep in mind that $not cannot accept multiple logical conditions, or it will generate an error message like '$not argument must be a regex or an object'.

//----------$ne------------//

find({data:{$ne:12}})
Output:
[{
    "id":2,
    "data": 20
},
{
    "id":3,
    "data": 22,
    "status":3
}]

find({data:{$ne:{$gt:20}}}) => This query is not expected to return the results we want

//----------$not------------//
find({data:{$not:{$lt:15}}})
Output:
[{
    "id":2,
    "data": 20,
    "status":2
},
{
    "id":3,
    "data": 22,
    "status":1
}]

find({data:{$not:[{$lt:15},{status:2}]}}) => throw error '$not argument must be a regex or an object'

//----------$nor------------//
if we want to use multiple logical operator we can use $not operator
find({ $nor: [ { data: 12 }, { status: 1 } ] })
$nor : Return the results where the document contains not equal to 12 and status not equal to 1
find({ $nor: [ { data: 12 }, { status: 1 } ] })
Output:
{
    "id":2,
    "data": 20,
    "status":2
}

